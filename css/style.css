@charset "UTF-8";


/*
  他にもFlexboxを使ったレイアウト方法でも実現することができます。
CSS flexible box の利用 - CSS | MDN
フレキシブルイメージ(flexible-images)　　から
*/
.box{
    height: 500px;　　
    max-width: 100%;
    background-image:url(../images/img_g.jpg);
    background-size: cover;
    background-position: center center;
}

/*フレキシブルイメージ(flexible-images)　　まで*/

.text-center {
    text-align: center;
}


.tital
{
    padding: 10px 0;
    

    font-size: 1.6rem;
}




/*
Flexbox(Flexible Box Layout Module) から*/

/*
Flexbox(Flexible Box Layout Module) 
共通部分
から*/
section
{
    padding: 60px 0; /* section要素の余白を上下60pxで揃える */
}
section .container
{
    width: 90%; /* sectionの中のインナーボックスをウィンドウ幅に対して90%に */
    
}
section h2
{
    font-size: 3.2rem;/* section要素見出しを32pxで揃える */
}
/*
Flexbox(Flexible Box Layout Module) 
共通部分
まで*/



section .container/*　.containerブロックも中央寄せにするため　　*/
{

    display: block;
margin-right: auto;
    margin-left: auto;
    
}


#Flexbox
{
   
}


#Flexbox .container
{
    /*　Flexboxでは、親要素にdisplay: flex;と指定するだけで、
    一番高い要素に合わせてすべての要素の高さを揃えてくれます。　　*/
    display: -webkit-flex;　　
    display:         flex;
    /*　justify-contentプロパティを使って要素の並び方の位置を左・横・中央に揃えたり、等間隔で揃えて配置
    両サイドのアイテムはそれぞれ端に、残りのアイテムを等間隔で配置　　*/
    justify-content: space-between;
   
}


#Flexbox .Flexbox-box
{
    margin: 10px 10px;
    -webkit-box-sizing: border-box;
       -moz-box-sizing: border-box;
            box-sizing: border-box;
            /*flexプロパティは、Flexboxでレイアウトした場合に横幅を指定することができます。
            横並びのFlexboxなので、 flex: 1; とすると、.skill-boxが全て1の横幅、
            つまり全て同じ幅になるように自動調整されます。 */
    -webkit-: 1;
            flex: 1;
    
}

.box-1
{
    margin: 0px 10px;
    padding: 20px;
    color: #ffffff;
background-color: #AAAAAA;
    
}

.box-2
{
    margin: 0px 10px;
    padding: 20px;
    color: #AAAAAA;
    background-color: #E5E5E5;
    
}





/*
Flexbox(Flexible Box Layout Module) まで*/







#boton
{
    background-color:  #FAFAFA;
}


#boton .container
{
    /*　Flexboxでは、親要素にdisplay: flex;と指定するだけで、
    一番高い要素に合わせてすべての要素の高さを揃えてくれます。　　*/
    display: -webkit-flex;　　
    display:         flex;
    /*　justify-contentプロパティを使って要素の並び方の位置を左・横・中央に揃えたり、等間隔で揃えて配置
    両サイドのアイテムはそれぞれ端に、残りのアイテムを等間隔で配置　　*/
    justify-content: space-between;
   
}


#boton .Flexbox-box
{
    -webkit-box-sizing: border-box;
       -moz-box-sizing: border-box;
            box-sizing: border-box;
            /*flexプロパティは、Flexboxでレイアウトした場合に横幅を指定することができます。
            横並びのFlexboxなので、 flex: 1; とすると、.skill-boxが全て1の横幅、
            つまり全て同じ幅になるように自動調整されます。 */
    -webkit-flex: 1;
            flex: 1;
    
}

a.bt{
  display: block;
  margin-right: auto;
    margin-left: auto;
  height: 30px;
  width: 120px;
  text-decoration: none;
  line-height: 33px;
  text-align: center;
  border-radius: 20px;
  color: #fff;
  -webkit-box-shadow: 1px 1px 1px #e9e9e9;
  -moz-box-shadow: 1px 1px 1px #e9e9e9;
  box-shadow: 1px 1px 1px #e9e9e9;
  background: #AAAAAA;
  
}

@media (max-width: 768px) {
    
    .box{
    height: 250px;　　
   
}
   
  .container {
      
    flex-direction: column;
  }

    .skill-box {
        margin: 10px 10px;
        height:250px;
    }
}


